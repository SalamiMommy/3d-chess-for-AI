# game3d/movement/movetypes/trigonalbishopmovement.py
"""3D Trigonal-Bishop move generation â€” pure movement rules, no registration."""

from typing import List
from game3d.pieces.enums import PieceType
from game3d.game.gamestate import GameState
from game3d.movement.pathvalidation import slide_along_directions, validate_piece_at
from game3d.movement.movepiece import Move
# Only the four true 3-D diagonals (equal step on every axis)
TRIGONAL_BISHOP_DIRECTIONS = [
    ( 1,  1,  1),
    ( 1,  1, -1),
    ( 1, -1,  1),
    ( 1, -1, -1),
    (-1,  1,  1),
    (-1,  1, -1),
    (-1, -1,  1),
    (-1, -1, -1),
]


def generate_trigonal_bishop_moves(state: GameState, x: int, y: int, z: int) -> List[Move]:
    """
    Generate all legal trigonal-bishop moves from (x, y, z).
    Uses centralized sliding logic from pathvalidation.py.
    Returns empty list if no valid trigonal-bishop is at start position.
    """
    pos = (x, y, z)

    if not validate_piece_at(state, pos, PieceType.TRIGONALBISHOP):   # or reuse BISHOP if you prefer
        return []

    return slide_along_directions(
        state,
        start=pos,
        directions=TRIGONAL_BISHOP_DIRECTIONS,
        allow_capture=True,
        allow_self_block=False
    )
